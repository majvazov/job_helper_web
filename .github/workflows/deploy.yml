name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node.js ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies 📦
        run: npm ci

      - name: Create Firebase config file 🔥
        run: |
          # Ensure the directory exists
          mkdir -p src/firebase
          echo "import { initializeApp } from 'firebase/app';
          import { getAuth } from 'firebase/auth';
          import { getFirestore } from 'firebase/firestore';

          const firebaseConfig = {
            apiKey: '${{ secrets.APIKEY }}',
            authDomain: '${{ secrets.AUTHDOMAIN }}',
            projectId: '${{ secrets.PROJECTID }}',
            storageBucket: '${{ secrets.STORAGEBUCKET }}',
            messagingSenderId: '${{ secrets.MESSAGINGSENDERID }}',
            appId: '${{ secrets.APPID }}',
            measurementId: '${{ secrets.MEASUREMENTID }}'
          };

          const app = initializeApp(firebaseConfig);
          const auth = getAuth(app);
          const db = getFirestore(app); // Make sure db is exported if needed elsewhere

          export { auth, db };" > src/firebase/config.js

      - name: Build project 🔧
        run: npm run build # Assumes build output is in 'dist'

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact ⬆️
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire dist directory
          path: './dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v4